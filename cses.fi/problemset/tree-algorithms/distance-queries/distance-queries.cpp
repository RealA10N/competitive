// a10n - Sat Mar  5 10:56:59 2022
// Distance Queries (https://cses.fi/problemset/task/1135)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

// clang-format off
void solution();
#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)
#define cases int _t = 1; cin >> _t; while(_t--)
#define solution() signed main() { cin.tie(NULL)->sync_with_stdio(false); \
    cout<<fixed<<setprecision(10); solution(); } void solution()
// clang-format on

typedef vector<int> vi;
const int maxn = 2e5 + 5;
const int maxlogn = 20;

vi g[maxn];
int h[maxn], tin[maxn], tout[maxn];
int stick[maxn][maxlogn];
int T = 1;

void dfs(int u) {
    tin[u] = T++;

    for (int k = 1; k < maxlogn; k++)
        stick[u][k] = stick[stick[u][k - 1]][k - 1];

    for (int v : g[u]) {
        if (tin[v]) continue;
        stick[v][0] = u;
        h[v] = h[u] + 1;
        dfs(v);
    }

    tout[u] = T++;
}

#define ancestor(p, c) (tin[p] <= tin[c] && tout[p] >= tout[c])

int lca(int a, int b) {
    if (ancestor(a, b)) return a;
    if (ancestor(b, a)) return b;
    for (int k = maxlogn - 1; k >= 0; k--)
        if (!ancestor(stick[a][k], b)) a = stick[a][k];
    return stick[a][0];
}

solution() {
    int n, q;
    cin >> n >> q;
    fori(n - 1, i) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        g[a].push_back(b), g[b].push_back(a);
    }

    h[0] = 0;
    fori(n, i) tin[i] = false;
    fori(maxlogn, i) stick[0][i] = 0;
    dfs(0);

    while (q--) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        cout << h[a] + h[b] - 2 * h[lca(a, b)] << endl;
    }
}
