// a10n - Wed Apr  6 22:51:37 2022
// Distinct Colors (https://cses.fi/problemset/task/1139)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)

typedef vector<int> vi;
typedef pair<int, int> ii;
typedef set<int> cset;

const int maxn = 2e5 + 5;
int c[maxn];
cset* cm[maxn];
vi g[maxn];

void dfs(int u, int p = 0) {
    queue<cset*> q;
    cm[u] = new cset;
    cm[u]->insert(c[u]);

    for (int v : g[u]) {
        if (v == p) continue;
        dfs(v, u);
        if (cm[v]->size() > cm[u]->size()) {
            q.push(cm[u]);
            cm[u] = cm[v];
        } else {
            q.push(cm[v]);
        }
    }

    while (q.size()) {
        for (int c : *q.front()) cm[u]->insert(c);
        q.pop();
    }

    c[u] = cm[u]->size();
}

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);

    int n;
    cin >> n;

    for (int i = 1; i <= n; i++) cin >> c[i];

    fori(n - 1, i) {
        int a, b;
        cin >> a >> b;
        g[a].push_back(b), g[b].push_back(a);
    }

    dfs(1);
    for (int i = 1; i <= n; i++) cout << c[i] << ' ';
    cout << endl;
}
