// a10n - Sat Mar  5 11:38:26 2022
// Company Queries II (https://cses.fi/problemset/task/1688)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

// clang-format off
void solution();
#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)
#define cases int _t = 1; cin >> _t; while(_t--)
#define solution() signed main() { cin.tie(NULL)->sync_with_stdio(false); \
    cout<<fixed<<setprecision(10); solution(); } void solution()
// clang-format on

typedef vector<int> vi;
const int maxn = 2e5 + 5;
const int maxlogn = 20;
vi g[maxn];
int h[maxn], tin[maxn], tout[maxn];
int s[maxn][maxlogn];
int T = 1;

#define ancestor(p, c) (tin[p] <= tin[c] && tout[p] >= tout[c])

void dfs(int u, int from, int height) {
    tin[u] = T++, s[u][0] = from, h[u] = height;
    for (int k = 1; k < maxlogn; k++) s[u][k] = s[s[u][k - 1]][k - 1];
    for (int v : g[u]) dfs(v, u, height + 1);
    tout[u] = T++;
}

inline int lca(int a, int b) {
    if (ancestor(a, b)) return a;
    if (ancestor(b, a)) return b;
    for (int k = maxlogn - 1; k >= 0; k--)
        if (!ancestor(s[a][k], b)) a = s[a][k];
    return s[a][0];
}

solution() {
    int n, q;
    cin >> n >> q;

    for (int i = 2; i <= n; i++) {
        int a;
        cin >> a;
        g[a].push_back(i);
    }

    dfs(1, 1, 0);

    while (q--) {
        int a, b;
        cin >> a >> b;
        cout << lca(a, b) << endl;
    }
}
