// a10n - Mon Apr 11 15:38:31 2022
// Convex Hull (https://cses.fi/problemset/task/2195)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)
#define x first
#define y second

typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;

ii operator+(ii a, ii b) { return ii{a.x + b.x, a.y + b.y}; }
ii operator-(ii a, ii b) { return ii{a.x - b.x, a.y - b.y}; }
int operator*(ii a, ii b) { return a.x * b.y - a.y * b.x; };
istream& operator>>(istream& in, ii& a) { return in >> a.x >> a.y; }
ostream& operator<<(ostream& out, ii& a) { return out << a.x << ' ' << a.y; }
int sign(int a) { return (a == 0 ? 0 : (a > 0 ? 1 : 0)); }
int ori(ii a, ii b, ii c) { return sign((c - a) * (b - a)); }

int lastriori(const vii& pts) {
    int n = pts.size();
    return ori(pts[n - 3], pts[n - 2], pts[n - 1]);
}

vii halfhull(vii pts) {
    vii s;
    for (auto p : pts) {
        s.push_back(p);
        while (s.size() > 2 && lastriori(s) > 0)
            s[s.size() - 2] = s.back(), s.pop_back();
    }
    return s;
}

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);
    int n;
    cin >> n;
    vii pts(n);
    fori(n, i) cin >> pts[i];
    sort(all(pts));
    vii first = halfhull(pts);
    reverse(all(pts));
    vii second = halfhull(pts);

    cout << first.size() + second.size() - 2 << endl;
    fori(first.size() - 1, i) cout << first[i] << endl;
    fori(second.size() - 1, i) cout << second[i] << endl;
}
