// a10n - Mon Apr 11 17:21:11 2022
// Polygon Lattice Points (https://cses.fi/problemset/task/2193)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)
#define x first
#define y second

typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;

istream& operator>>(istream& in, ii& a) { return in >> a.x >> a.y; }
ii operator+(ii a, ii b) { return ii{a.x + b.x, a.y + b.y}; }
ii operator-(ii a, ii b) { return ii{a.x - b.x, a.y - b.y}; }

int area2(const vii& p) {
    int a = 0;
    fori(p.size() - 1, i) a += (p[i].x - p[i + 1].x) * (p[i].y + p[i + 1].y);
    return abs(a);
}

int gcd(int a, int b) {
    if (a == 0) return b;
    if (b == 0) return a;
    if (a > b) swap(a, b);
    return gcd(a, b % a);
}

int laticbound(const vii& p) {
    int b = 0;
    fori(p.size() - 1, i) {
        ii d = p[i + 1] - p[i];
        b += gcd(abs(d.x), abs(d.y));
    }
    return b;
}

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);

    int n;
    cin >> n;
    vii p(n + 1);
    fori(n, i) cin >> p[i];
    p[n] = p[0];

    int a2 = area2(p);
    int b = laticbound(p);
    int i2 = a2 - b + 2;

    cout << i2 / 2 << ' ' << b << endl;
}
