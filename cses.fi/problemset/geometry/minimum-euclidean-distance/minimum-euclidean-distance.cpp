// a10n - Mon Apr 11 16:15:40 2022
// Minimum Euclidean Distance (https://cses.fi/problemset/task/2194)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)
#define x first
#define y second

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

istream& operator>>(istream& in, ii& a) { return in >> a.x >> a.y; }
ii operator!(ii a) { return ii{a.y, a.x}; }
int dist(ii a, ii b) {
    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);
}

const int oo = INT64_MAX - 5;

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);
    int n;
    cin >> n;
    vii pts(n);
    fori(n, i) cin >> pts[i];
    sort(all(pts));

    set<ii> xs, ys;
    int d = dist(pts[0], pts[1]);

    for (auto p0 : pts) {
        while (xs.size() && xs.begin()->x < p0.x - sqrt(d))
            ys.erase(!*xs.begin()), xs.erase(xs.begin());

        auto it = ys.lower_bound({p0.y - sqrt(d), -oo});
        while (it != ys.end() && it->x <= p0.y + sqrt(d)) {
            d = min(d, dist(p0, !*it));
            it++;
        }

        xs.insert(p0), ys.insert(!p0);
    }

    cout << d << endl;
}
