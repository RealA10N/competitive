// a10n - Thu Mar 24 22:00:50 2022
// High Score (https://cses.fi/problemset/task/1673)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)

typedef tuple<int, int, int> iii;
typedef vector<int> vi;

const int maxn = 2505, maxm = 5005;
iii edges[maxm];
vi g[maxn], gt[maxn];
bool visg[maxn], visgt[maxn];

void gdfs(int u) {
    visg[u] = true;
    for (int v : g[u])
        if (!visg[v]) gdfs(v);
}

void gtdfs(int u) {
    visgt[u] = true;
    for (int v : gt[u])
        if (!visgt[v]) gtdfs(v);
}

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);

    int n, m;
    cin >> n >> m;

    fori(n, i) visg[i] = visgt[i] = false;
    fori(m, i) {
        int a, b, c;
        cin >> a >> b >> c;
        edges[i] = {--a, --b, c};
        g[a].push_back(b), gt[b].push_back(a);
    }

    vi score(n, -1e16);
    score[0] = 0;

    fori(n, k) fori(m, i) {
        int a, b, c;
        tie(a, b, c) = edges[i];
        if (score[b] < score[a] + c) score[b] = score[a] + c;
    }

    gdfs(0), gtdfs(n - 1);
    fori(m, i) {
        int a, b, c;
        tie(a, b, c) = edges[i];
        if (score[b] < score[a] + c) {
            score[b] = score[a] + c;
            if (visg[b] && visgt[b]) {
                cout << -1 << endl;
                return 0;
            }
        }
    }

    cout << score[n - 1] << endl;
}
