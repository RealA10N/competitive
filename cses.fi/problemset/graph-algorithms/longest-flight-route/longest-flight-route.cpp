// a10n - Wed Mar 23 11:47:50 2022
// Longest Flight Route (https://cses.fi/problemset/task/1680)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)

typedef vector<int> vi;
typedef pair<int, int> ii;

const int maxn = 1e5 + 5;
vi gt[maxn];
int deg[maxn], dist[maxn], from[maxn];

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);
    cout << fixed << setprecision(10);

    int n, m;
    cin >> n >> m;

    fori(n + 1, i) deg[i] = 0, dist[i] = -1;
    dist[n] = 0;

    fori(m, i) {
        int a, b;
        cin >> a >> b;
        gt[b].push_back(a);
        deg[a]++;
    }

    queue<int> q;
    for (int i = 1; i <= n; i++)
        if (!deg[i]) q.push(i);

    while (q.size()) {
        int u = q.front();
        q.pop();
        for (int v : gt[u]) {
            if (--deg[v] == 0) q.push(v);
            if (dist[u] != -1 && dist[u] + 1 > dist[v]) {
                dist[v] = dist[u] + 1;
                from[v] = u;
            }
        }
    }

    if (dist[1] == -1) {
        cout << "IMPOSSIBLE" << endl;
    } else {
        cout << dist[1] + 1 << endl;
        int u = 1;
        cout << '1';
        while (u != n) {
            u = from[u];
            cout << ' ' << u;
        }
        cout << endl;
    }
}
