// a10n - Sun Mar 27 00:03:39 2022
// Cycle Finding (https://cses.fi/problemset/task/1197)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef tuple<int, int, int> iii;

const int maxn = 2505;
const int maxm = 5005;
vii g[maxn];
iii e[maxm];
int n, m, best[maxn], from[maxn];

void report(int u) {
    vi vis(n + 1, false);
    deque<int> q;
    while (!vis[u]) {
        q.push_back(u);
        vis[u] = true;
        u = from[u];
    }
    q.push_back(u);
    while (q.front() != u) q.pop_front();
    while (q.size()) {
        cout << q.back() << ' ';
        q.pop_back();
    }
}

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);

    cin >> n >> m;

    fori(m, i) {
        int a, b, c;
        cin >> a >> b >> c;
        g[a].push_back({b, c});
        e[i] = {a, b, c};
    }

    fori(maxn, i) best[i] = from[i] = 0;
    fori(n, i) fori(m, i) {
        int a, b, c;
        tie(a, b, c) = e[i];
        if (best[a] + c < best[b]) from[b] = a, best[b] = best[a] + c;
    }

    fori(m, i) {
        int a, b, c;
        tie(a, b, c) = e[i];
        if (best[a] + c < best[b]) {
            cout << "YES" << endl;
            from[b] = a;
            report(b);
            return 0;
        }
    }

    cout << "NO" << endl;
}
