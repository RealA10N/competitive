// a10n - Sat Apr 16 10:38:02 2022
// Pizzeria Queries (https://cses.fi/problemset/task/2206)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define fori(n, i) for (int i = 0; i < n; i++)
const int oo = 1e18;

typedef struct seg {
    int lo, hi, mi, v = oo;
    seg *left = NULL, *right = NULL;

    seg(int lo, int hi) : lo(lo), hi(hi), mi((lo + hi) / 2) {
        if (lo < hi) {
            left = new seg(lo, mi);
            right = new seg(mi + 1, hi);
        }
    }

    void pull() {
        if (lo == hi) return;
        v = oo;
        if (left) v = min(v, left->v);
        if (right) v = min(v, right->v);
    }

    void set(int i, int v) {
        if (lo == hi && hi == i) return this->v = v, void();
        if (i < lo || hi < i) return;
        left->set(i, v), right->set(i, v);
        pull();
    }

    int rangemin(int a, int b) {
        if (b < lo || hi < a) return oo;
        if (a <= lo && hi <= b) return v;
        return min(left->rangemin(a, b), right->rangemin(a, b));
    }

} seg;

signed main() {
    cin.tie(NULL)->sync_with_stdio(false);
    int n, q;
    cin >> n >> q;

    seg left(0, n - 1), right(0, n - 1);

    fori(n, i) {
        int x;
        cin >> x;
        left.set(i, x - i);
        right.set(i, x + i);
    }

    while (q--) {
        int t;
        cin >> t;
        if (t == 1) {
            int k, x;
            cin >> k >> x;
            k--;
            left.set(k, x - k);
            right.set(k, x + k);
        } else {
            int k;
            cin >> k;
            k--;
            int lo = left.rangemin(0, k) + k;
            int hi = right.rangemin(k, n - 1) - k;
            cout << min(lo, hi) << endl;
        }
    }
}
