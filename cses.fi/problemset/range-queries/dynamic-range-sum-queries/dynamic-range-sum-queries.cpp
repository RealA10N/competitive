// a10n - Sat Mar  5 21:10:54 2022
// Dynamic Range Sum Queries (https://cses.fi/problemset/task/1648)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)

const int maxn = 2e5 + 5;
int st[2 * maxn];
int n, q;

int query(int lo, int hi) {
    int s = 0;
    if (lo > hi) return s;
    if (lo % 2 == 1) s += st[lo++];
    if (hi % 2 == 0) s += st[hi--];
    return s + query(lo / 2, hi / 2);
}

void update(int a) {
    if (a == 0) return;
    a /= 2, st[a] = st[2 * a] + st[2 * a + 1];
    update(a);
}

signed main() {
    cin >> n >> q;
    fori(n, i) cin >> st[i + n];
    fori(n, i) update(i + n);

    while (q--) {
        int t, a, b;
        cin >> t >> a >> b;
        if (t == 1) st[n + a - 1] = b, update(n + a - 1);
        if (t == 2) cout << query(n + a - 1, n + b - 1) << endl;
    }
}
