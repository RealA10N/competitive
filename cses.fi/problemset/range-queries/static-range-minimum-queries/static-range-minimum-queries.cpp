// a10n - Thu Mar  3 20:06:31 2022
// Static Range Minimum Queries (https://cses.fi/problemset/task/1647)
// Generated by cptk

#include <bits/stdc++.h>
using namespace std;

// clang-format off
void solution();
#define int long long
#define all(x) (x).begin(), (x).end()
#define fori(n, i) for (int i = 0; i < n; i++)
#define cases int _t = 1; cin >> _t; while(_t--)
#define solution() signed main() { cin.tie(NULL)->sync_with_stdio(false); \
    cout<<fixed<<setprecision(10); solution(); } void solution()
// clang-format on

const int maxn = 2e5 + 5;
const int maxlogn = 20;
int sticks[maxn][maxlogn];

solution() {
    int n, q;
    cin >> n >> q;
    fori(n, i) cin >> sticks[i][0];

    for (int k = 1, dk = 2; dk <= n; k++, dk *= 2)
        for (int i = 0; i + dk <= n; i++)
            sticks[i][k] = min(sticks[i][k - 1], sticks[i + (dk / 2)][k - 1]);

    while (q--) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        int l = b - a + 1, k = 19, dk = (1 << 19);
        while (k >= 0 && dk > l) dk /= 2, k--;
        cout << min(sticks[a][k], sticks[b + 1 - dk][k]) << endl;
    }
}
